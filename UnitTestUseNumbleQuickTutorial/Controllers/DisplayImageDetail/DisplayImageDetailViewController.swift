//
//  DisplayImageDetailViewController.swift
//  UnitTestUseNumbleQuickTutorial
//
//  Created by Papon Supamongkonchai on 3/11/2565 BE.
//  Copyright (c) 2565 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SDWebImage

protocol DisplayImageDetailView: AnyObject {
    func displayDisplayImage(viewModel: DisplayImageDetailModels.DetailModels.ViewModel)
    func displayStartLoading()
    func displayStopLoading()
    func displayError()
}

class DisplayImageDetailViewController: UIViewController, DisplayImageDetailView {
    
    @IBOutlet weak var indicatorLoading: UIActivityIndicatorView!
    @IBOutlet weak var imgDisplay: UIImageView!
    @IBOutlet weak var lblAuthorName: UILabel!
    @IBOutlet weak var lblSizeImage: UILabel!
    
    var interactor: DisplayImageDetailBusinessLogic?
    var router: (NSObjectProtocol & DisplayImageDetailRoutingLogic & DisplayImageDetailDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = DisplayImageDetailInteractor()
        let presenter = DisplayImageDetailPresenter()
        let router = DisplayImageDetailRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        getImage()
    }
    
    // MARK: Do something
    
    func getImage() {
        let request = DisplayImageDetailModels.DetailModels.Request(imageID: "116")
        interactor?.requestDisplayImage(request: request)
    }
    
    // MARK: DisplayImageDetailView
    func displayDisplayImage(viewModel: DisplayImageDetailModels.DetailModels.ViewModel) {
        DispatchQueue.main.async {
            self.imgDisplay.sd_setImage(with: URL(string: viewModel.urlImage), placeholderImage: UIImage(named: ""))
            let extra = self.interactor?.getExtraNameText() ?? ""
            self.lblAuthorName.text = "Author: \(viewModel.author)\n\(extra)"
            self.lblSizeImage.text = "\(viewModel.width) x \(viewModel.height)"
        }
        
    }
    
    func displayStartLoading() {
        DispatchQueue.main.async {
            self.indicatorLoading.startAnimating()
            self.indicatorLoading.isHidden = false
        }
    }
    
    func displayStopLoading() {
        DispatchQueue.main.async {
            self.indicatorLoading.stopAnimating()
            self.indicatorLoading.isHidden = true
        }
    }
    
    func displayError() {
        print("display is Error")
    }
    
}
